{
  "accordion": {
    "brain": {
      "BrnAccordionContentComponent": {
        "file": "brain/accordion/src/lib/brn-accordion-content.component.ts",
        "inputs": [],
        "outputs": [],
        "selector": "brn-accordion-content"
      },
      "BrnAccordionItemDirective": {
        "file": "brain/accordion/src/lib/brn-accordion.directive.ts",
        "inputs": [
          {
            "name": "isOpened",
            "type": "boolean",
            "description": "Allows to set initial state of accordion"
          }
        ],
        "outputs": [],
        "selector": "[brnAccordionItem]",
        "exportAs": "brnAccordionItem"
      },
      "BrnAccordionTriggerDirective": {
        "file": "brain/accordion/src/lib/brn-accordion.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnAccordionTrigger]"
      },
      "BrnAccordionDirective": {
        "file": "brain/accordion/src/lib/brn-accordion.directive.ts",
        "inputs": [
          {
            "name": "type",
            "type": "'single' | 'multiple'",
            "description": ""
          },
          {
            "name": "dir",
            "type": "'ltr' | 'rtl' | null",
            "description": ""
          },
          {
            "name": "orientation",
            "type": "'horizontal' | 'vertical'",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[brnAccordion]",
        "exportAs": "brnAccordion"
      }
    },
    "helm": {
      "HlmAccordionContentComponent": {
        "file": "ui/accordion/helm/src/lib/hlm-accordion-content.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-accordion-content"
      },
      "HlmAccordionIconDirective": {
        "file": "ui/accordion/helm/src/lib/hlm-accordion-icon.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "ng-icon[hlmAccordionIcon], ng-icon[hlmAccIcon]"
      },
      "HlmAccordionItemDirective": {
        "file": "ui/accordion/helm/src/lib/hlm-accordion-item.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmAccordionItem],brn-accordion-item[hlm],hlm-accordion-item"
      },
      "HlmAccordionTriggerDirective": {
        "file": "ui/accordion/helm/src/lib/hlm-accordion-trigger.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmAccordionTrigger]"
      },
      "HlmAccordionDirective": {
        "file": "ui/accordion/helm/src/lib/hlm-accordion.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmAccordion], hlm-accordion"
      }
    }
  },
  "alert-dialog": {
    "brain": {
      "BrnAlertDialogContentDirective": {
        "file": "brain/alert-dialog/src/lib/brn-alert-dialog-content.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnAlertDialogContent]"
      },
      "BrnAlertDialogDescriptionDirective": {
        "file": "brain/alert-dialog/src/lib/brn-alert-dialog-description.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnAlertDialogDescription]"
      },
      "BrnAlertDialogOverlayComponent": {
        "file": "brain/alert-dialog/src/lib/brn-alert-dialog-overlay.component.ts",
        "inputs": [],
        "outputs": [],
        "selector": "brn-alert-dialog-overlay"
      },
      "BrnAlertDialogTitleDirective": {
        "file": "brain/alert-dialog/src/lib/brn-alert-dialog-title.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnAlertDialogTitle]"
      },
      "BrnAlertDialogTriggerDirective": {
        "file": "brain/alert-dialog/src/lib/brn-alert-dialog-trigger.directive.ts",
        "inputs": [
          {
            "name": "brnAlertDialogTriggerFor",
            "type": "BrnAlertDialogComponent | undefined",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "button[brnAlertDialogTrigger],button[brnAlertDialogTriggerFor]"
      },
      "BrnAlertDialogComponent": {
        "file": "brain/alert-dialog/src/lib/brn-alert-dialog.component.ts",
        "inputs": [],
        "outputs": [],
        "selector": "brn-alert-dialog",
        "exportAs": "brnAlertDialog"
      }
    },
    "helm": {
      "HlmAlertDialogActionButtonDirective": {
        "file": "ui/alert-dialog/helm/src/lib/hlm-alert-dialog-action-button.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "button[hlmAlertDialogAction]"
      },
      "HlmAlertDialogCancelButtonDirective": {
        "file": "ui/alert-dialog/helm/src/lib/hlm-alert-dialog-cancel-button.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "button[hlmAlertDialogCancel]"
      },
      "HlmAlertDialogContentComponent": {
        "file": "ui/alert-dialog/helm/src/lib/hlm-alert-dialog-content.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-alert-dialog-content"
      },
      "HlmAlertDialogDescriptionDirective": {
        "file": "ui/alert-dialog/helm/src/lib/hlm-alert-dialog-description.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmAlertDialogDescription]"
      },
      "HlmAlertDialogFooterComponent": {
        "file": "ui/alert-dialog/helm/src/lib/hlm-alert-dialog-footer.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-alert-dialog-footer"
      },
      "HlmAlertDialogHeaderComponent": {
        "file": "ui/alert-dialog/helm/src/lib/hlm-alert-dialog-header.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-alert-dialog-header"
      },
      "HlmAlertDialogOverlayDirective": {
        "file": "ui/alert-dialog/helm/src/lib/hlm-alert-dialog-overlay.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmAlertDialogOverlay],brn-alert-dialog-overlay[hlm]"
      },
      "HlmAlertDialogTitleDirective": {
        "file": "ui/alert-dialog/helm/src/lib/hlm-alert-dialog-title.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmAlertDialogTitle]"
      },
      "HlmAlertDialogComponent": {
        "file": "ui/alert-dialog/helm/src/lib/hlm-alert-dialog.component.ts",
        "inputs": [],
        "outputs": [],
        "selector": "hlm-alert-dialog",
        "exportAs": "hlmAlertDialog"
      }
    }
  },
  "avatar": {
    "brain": {
      "BrnAvatarComponent": {
        "file": "brain/avatar/src/lib/brn-avatar.component.ts",
        "inputs": [],
        "outputs": [],
        "selector": "brn-avatar"
      },
      "fallback": {
        "BrnAvatarFallbackDirective": {
          "file": "brain/avatar/src/lib/fallback/brn-avatar-fallback.directive.ts",
          "inputs": [
            {
              "name": "userClass",
              "type": "ClassValue",
              "description": ""
            },
            {
              "name": "autoColor",
              "type": "boolean",
              "description": ""
            }
          ],
          "outputs": [],
          "selector": "[brnAvatarFallback]",
          "exportAs": "avatarFallback"
        }
      },
      "image": {
        "BrnAvatarImageDirective": {
          "file": "brain/avatar/src/lib/image/brn-avatar-image.directive.ts",
          "inputs": [],
          "outputs": [],
          "selector": "img[brnAvatarImage]",
          "exportAs": "avatarImage"
        }
      }
    },
    "helm": {
      "HlmAvatarComponent": {
        "file": "ui/avatar/helm/src/lib/hlm-avatar.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "variant",
            "type": "AvatarVariants['variant']",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-avatar"
      },
      "fallback": {
        "HlmAvatarFallbackDirective": {
          "file": "ui/avatar/helm/src/lib/fallback/hlm-avatar-fallback.directive.ts",
          "inputs": [],
          "outputs": [],
          "selector": "[hlmAvatarFallback]",
          "exportAs": "avatarFallback"
        }
      },
      "image": {
        "HlmAvatarImageDirective": {
          "file": "ui/avatar/helm/src/lib/image/hlm-avatar-image.directive.ts",
          "inputs": [
            {
              "name": "userClass",
              "type": "ClassValue",
              "description": ""
            }
          ],
          "outputs": [],
          "selector": "img[hlmAvatarImage]",
          "exportAs": "avatarImage"
        }
      }
    }
  },
  "calendar": {
    "brain": {
      "BrnCalendarCellButtonDirective": {
        "file": "brain/calendar/src/lib/brn-calendar-cell-button.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "button[brnCalendarCellButton]"
      },
      "BrnCalendarCellDirective": {
        "file": "brain/calendar/src/lib/brn-calendar-cell.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnCalendarCell]"
      },
      "BrnCalendarGridDirective": {
        "file": "brain/calendar/src/lib/brn-calendar-grid.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnCalendarGrid]"
      },
      "BrnCalendarHeaderDirective": {
        "file": "brain/calendar/src/lib/brn-calendar-header.directive.ts",
        "inputs": [
          {
            "name": "id",
            "type": "unknown",
            "description": "The unique id for the header"
          }
        ],
        "outputs": [],
        "selector": "[brnCalendarHeader]"
      },
      "BrnCalendarNextButtonDirective": {
        "file": "brain/calendar/src/lib/brn-calendar-next-button.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnCalendarNextButton]"
      },
      "BrnCalendarPreviousButtonDirective": {
        "file": "brain/calendar/src/lib/brn-calendar-previous-button.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnCalendarPreviousButton]"
      },
      "BrnCalendarWeekDirective": {
        "file": "brain/calendar/src/lib/brn-calendar-week.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnCalendarWeek]"
      },
      "BrnCalendarWeekdayDirective": {
        "file": "brain/calendar/src/lib/brn-calendar-weekday.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnCalendarWeekday]"
      },
      "BrnCalendarDirective": {
        "file": "brain/calendar/src/lib/brn-calendar.directive.ts",
        "inputs": [
          {
            "name": "min",
            "type": "T",
            "description": "The minimum date that can be selected."
          },
          {
            "name": "max",
            "type": "T",
            "description": ""
          },
          {
            "name": "disabled",
            "type": "boolean",
            "description": "Determine if the date picker is disabled."
          },
          {
            "name": "dateDisabled",
            "type": "(date: T) => boolean",
            "description": "Whether a specific date is disabled."
          },
          {
            "name": "weekStartsOn",
            "type": "Weekday",
            "description": "The day the week starts on"
          },
          {
            "name": "defaultFocusedDate",
            "type": "T",
            "description": "The default focused date."
          }
        ],
        "outputs": [],
        "selector": "[brnCalendar]"
      }
    },
    "helm": {
      "HlmCalendarComponent": {
        "file": "ui/calendar/helm/src/lib/hlm-calendar.component.ts",
        "inputs": [
          {
            "name": "calendarClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "min",
            "type": "T",
            "description": "The minimum date that can be selected."
          },
          {
            "name": "max",
            "type": "T",
            "description": ""
          },
          {
            "name": "disabled",
            "type": "boolean",
            "description": "Determine if the date picker is disabled."
          },
          {
            "name": "dateDisabled",
            "type": "(date: T) => boolean",
            "description": "Whether a specific date is disabled."
          },
          {
            "name": "weekStartsOn",
            "type": "Weekday",
            "description": "The day the week starts on"
          },
          {
            "name": "defaultFocusedDate",
            "type": "T",
            "description": "The default focused date."
          }
        ],
        "outputs": [],
        "selector": "hlm-calendar"
      }
    }
  },
  "checkbox": {
    "brain": {
      "BrnCheckboxComponent": {
        "file": "brain/checkbox/src/lib/brn-checkbox.component.ts",
        "inputs": [
          {
            "name": "id",
            "type": "string | null",
            "description": "Used to set the id on the underlying input element."
          },
          {
            "name": "name",
            "type": "string | null",
            "description": "Used to set the name attribute on the underlying input element."
          },
          {
            "name": "ariaLabel",
            "type": "string | null",
            "description": "Used to set the aria-label attribute on the underlying input element."
          },
          {
            "name": "ariaLabelledby",
            "type": "string | null",
            "description": "Used to set the aria-labelledby attribute on the underlying input element."
          },
          {
            "name": "ariaDescribedby",
            "type": "string | null",
            "description": ""
          },
          {
            "name": "required",
            "type": "unknown",
            "description": ""
          },
          {
            "name": "disabled",
            "type": "unknown",
            "description": ""
          }
        ],
        "outputs": [
          {
            "name": "changed",
            "type": "BrnCheckboxValue",
            "description": ""
          }
        ],
        "selector": "brn-checkbox"
      }
    },
    "helm": {
      "HlmCheckboxComponent": {
        "file": "ui/checkbox/helm/src/lib/hlm-checkbox.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "id",
            "type": "string | null",
            "description": "Used to set the id on the underlying brn element."
          },
          {
            "name": "ariaLabel",
            "type": "string | null",
            "description": "Used to set the aria-label attribute on the underlying brn element."
          },
          {
            "name": "ariaLabelledby",
            "type": "string | null",
            "description": "Used to set the aria-labelledby attribute on the underlying brn element."
          },
          {
            "name": "ariaDescribedby",
            "type": "string | null",
            "description": "Used to set the aria-describedby attribute on the underlying brn element."
          },
          {
            "name": "name",
            "type": "string | null",
            "description": "The name attribute of the checkbox."
          },
          {
            "name": "required",
            "type": "unknown",
            "description": "Whether the checkbox is required."
          },
          {
            "name": "disabled",
            "type": "unknown",
            "description": "Whether the checkbox is disabled."
          }
        ],
        "outputs": [
          {
            "name": "changed",
            "type": "boolean",
            "description": ""
          }
        ],
        "selector": "hlm-checkbox"
      }
    }
  },
  "collapsible": {
    "brain": {
      "BrnCollapsibleContentComponent": {
        "file": "brain/collapsible/src/lib/brn-collapsible-content.component.ts",
        "inputs": [
          {
            "name": "id",
            "type": "string | null | undefined",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "brn-collapsible-content"
      },
      "BrnCollapsibleTriggerDirective": {
        "file": "brain/collapsible/src/lib/brn-collapsible-trigger.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "button[brnCollapsibleTrigger]"
      },
      "BrnCollapsibleComponent": {
        "file": "brain/collapsible/src/lib/brn-collapsible.component.ts",
        "inputs": [
          {
            "name": "disabled",
            "type": "unknown",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "brn-collapsible"
      }
    }
  },
  "command": {
    "brain": {
      "BrnCommandEmptyDirective": {
        "file": "brain/command/src/lib/brn-command-empty.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnCommandEmpty]"
      },
      "BrnCommandGroupDirective": {
        "file": "brain/command/src/lib/brn-command-group.directive.ts",
        "inputs": [
          {
            "name": "id",
            "type": "string",
            "description": "The id of the command list"
          }
        ],
        "outputs": [],
        "selector": "[brnCommandGroup]"
      },
      "BrnCommandItemDirective": {
        "file": "brain/command/src/lib/brn-command-item.directive.ts",
        "inputs": [
          {
            "name": "id",
            "type": "unknown",
            "description": "A unique id for the item"
          },
          {
            "name": "_disabled",
            "type": "boolean",
            "description": "Whether the item is disabled."
          }
        ],
        "outputs": [
          {
            "name": "selected",
            "type": "void",
            "description": "Emits when the item is selected."
          }
        ],
        "selector": "button[brnCommandItem]"
      },
      "BrnCommandListDirective": {
        "file": "brain/command/src/lib/brn-command-list.directive.ts",
        "inputs": [
          {
            "name": "id",
            "type": "string",
            "description": "The id of the command list"
          }
        ],
        "outputs": [],
        "selector": "[brnCommandList]"
      },
      "BrnCommandSearchInputDirective": {
        "file": "brain/command/src/lib/brn-command-search-input.directive.ts",
        "inputs": [
          {
            "name": "value",
            "type": "string",
            "description": "The initial value of the search input"
          }
        ],
        "outputs": [],
        "selector": "input[brnCommandSearchInput]"
      },
      "BrnCommandDirective": {
        "file": "brain/command/src/lib/brn-command.directive.ts",
        "inputs": [
          {
            "name": "id",
            "type": "string",
            "description": "The id of the command"
          },
          {
            "name": "filter",
            "type": "CommandFilter",
            "description": "A custom filter function to use when searching."
          }
        ],
        "outputs": [
          {
            "name": "valueChange",
            "type": "string",
            "description": "when the selection has changed"
          }
        ],
        "selector": "[brnCommand]"
      }
    },
    "helm": {
      "HlmCommandDialogCloseButtonDirective": {
        "file": "ui/command/helm/src/lib/hlm-command-dialog-close-button.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmCommandDialogCloseBtn]"
      },
      "HlmCommandDialogDirective": {
        "file": "ui/command/helm/src/lib/hlm-command-dialog.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmCommandDialog]"
      },
      "HlmCommandEmptyDirective": {
        "file": "ui/command/helm/src/lib/hlm-command-empty.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmCommandEmpty]"
      },
      "HlmCommandGroupLabelComponent": {
        "file": "ui/command/helm/src/lib/hlm-command-group-label.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "string",
            "description": "* The user defined class"
          }
        ],
        "outputs": [],
        "selector": "hlm-command-group-label"
      },
      "HlmCommandGroupComponent": {
        "file": "ui/command/helm/src/lib/hlm-command-group.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "string",
            "description": "* The user defined class"
          }
        ],
        "outputs": [],
        "selector": "hlm-command-group"
      },
      "HlmCommandIconDirective": {
        "file": "ui/command/helm/src/lib/hlm-command-icon.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[hlmCommandIcon]"
      },
      "HlmCommandItemComponent": {
        "file": "ui/command/helm/src/lib/hlm-command-item.component.ts",
        "inputs": [
          {
            "name": "value",
            "type": "string",
            "description": "The value this item represents."
          },
          {
            "name": "disabled",
            "type": "boolean",
            "description": "Whether the item is disabled."
          },
          {
            "name": "userClass",
            "type": "string",
            "description": "* The user defined class"
          }
        ],
        "outputs": [
          {
            "name": "selected",
            "type": "void",
            "description": "Emits when the item is selected."
          }
        ],
        "selector": "button[hlm-command-item]"
      },
      "HlmCommandListComponent": {
        "file": "ui/command/helm/src/lib/hlm-command-list.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "string",
            "description": "The user defined class"
          }
        ],
        "outputs": [],
        "selector": "hlm-command-list"
      },
      "HlmCommandSearchInputComponent": {
        "file": "ui/command/helm/src/lib/hlm-command-search-input.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "string",
            "description": "* The user defined class"
          }
        ],
        "outputs": [],
        "selector": "input[hlm-command-search-input]"
      },
      "HlmCommandSearchComponent": {
        "file": "ui/command/helm/src/lib/hlm-command-search.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "string",
            "description": "* The user defined class"
          }
        ],
        "outputs": [],
        "selector": "hlm-command-search"
      },
      "HlmCommandSeparatorComponent": {
        "file": "ui/command/helm/src/lib/hlm-command-separator.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "string",
            "description": "* The user defined class"
          }
        ],
        "outputs": [],
        "selector": "hlm-command-separator"
      },
      "HlmCommandShortcutComponent": {
        "file": "ui/command/helm/src/lib/hlm-command-shortcut.component.ts",
        "inputs": [],
        "outputs": [],
        "selector": "hlm-command-shortcut"
      },
      "HlmCommandComponent": {
        "file": "ui/command/helm/src/lib/hlm-command.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "string",
            "description": "* The user defined class"
          }
        ],
        "outputs": [],
        "selector": "hlm-command"
      }
    }
  },
  "dialog": {
    "brain": {
      "BrnDialogCloseDirective": {
        "file": "brain/dialog/src/lib/brn-dialog-close.directive.ts",
        "inputs": [
          {
            "name": "delay",
            "type": "number | undefined",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "button[brnDialogClose]"
      },
      "BrnDialogContentDirective": {
        "file": "brain/dialog/src/lib/brn-dialog-content.directive.ts",
        "inputs": [
          {
            "name": "className",
            "type": "string | null | undefined",
            "description": ""
          },
          {
            "name": "context",
            "type": "T | undefined",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[brnDialogContent]"
      },
      "BrnDialogDescriptionDirective": {
        "file": "brain/dialog/src/lib/brn-dialog-description.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnDialogDescription]"
      },
      "BrnDialogOverlayComponent": {
        "file": "brain/dialog/src/lib/brn-dialog-overlay.component.ts",
        "inputs": [
          {
            "name": "className",
            "type": "string | null | undefined",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "brn-dialog-overlay"
      },
      "BrnDialogTitleDirective": {
        "file": "brain/dialog/src/lib/brn-dialog-title.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnDialogTitle]"
      },
      "BrnDialogTriggerDirective": {
        "file": "brain/dialog/src/lib/brn-dialog-trigger.directive.ts",
        "inputs": [
          {
            "name": "id",
            "type": "unknown",
            "description": ""
          },
          {
            "name": "brnDialogTriggerFor",
            "type": "BrnDialogComponent | undefined",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "button[brnDialogTrigger],button[brnDialogTriggerFor]",
        "exportAs": "brnDialogTrigger"
      },
      "BrnDialogComponent": {
        "file": "brain/dialog/src/lib/brn-dialog.component.ts",
        "inputs": [
          {
            "name": "state",
            "type": "BrnDialogState | null",
            "description": ""
          },
          {
            "name": "role",
            "type": "BrnDialogOptions['role']",
            "description": ""
          },
          {
            "name": "hasBackdrop",
            "type": "unknown",
            "description": ""
          },
          {
            "name": "positionStrategy",
            "type": "BrnDialogOptions['positionStrategy']",
            "description": ""
          },
          {
            "name": "scrollStrategy",
            "type": "BrnDialogOptions['scrollStrategy'] | 'close' | 'reposition' | null",
            "description": ""
          },
          {
            "name": "restoreFocus",
            "type": "BrnDialogOptions['restoreFocus']",
            "description": ""
          },
          {
            "name": "closeOnOutsidePointerEvents",
            "type": "unknown",
            "description": ""
          },
          {
            "name": "closeOnBackdropClick",
            "type": "unknown",
            "description": ""
          },
          {
            "name": "attachTo",
            "type": "BrnDialogOptions['attachTo']",
            "description": ""
          },
          {
            "name": "attachPositions",
            "type": "BrnDialogOptions['attachPositions']",
            "description": ""
          },
          {
            "name": "autoFocus",
            "type": "BrnDialogOptions['autoFocus']",
            "description": ""
          },
          {
            "name": "closeDelay",
            "type": "unknown",
            "description": ""
          },
          {
            "name": "disableClose",
            "type": "unknown",
            "description": ""
          },
          {
            "name": "ariaDescribedBy",
            "type": "BrnDialogOptions['ariaDescribedBy']",
            "description": ""
          },
          {
            "name": "ariaLabelledBy",
            "type": "BrnDialogOptions['ariaLabelledBy']",
            "description": ""
          },
          {
            "name": "ariaLabel",
            "type": "BrnDialogOptions['ariaLabel']",
            "description": ""
          },
          {
            "name": "ariaModal",
            "type": "unknown",
            "description": ""
          }
        ],
        "outputs": [
          {
            "name": "closed",
            "type": "any",
            "description": ""
          },
          {
            "name": "stateChanged",
            "type": "BrnDialogState",
            "description": ""
          }
        ],
        "selector": "brn-dialog",
        "exportAs": "brnDialog"
      }
    },
    "helm": {
      "HlmDialogCloseDirective": {
        "file": "ui/dialog/helm/src/lib/hlm-dialog-close.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmDialogClose],[brnDialogClose][hlm]"
      },
      "HlmDialogContentComponent": {
        "file": "ui/dialog/helm/src/lib/hlm-dialog-content.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-dialog-content"
      },
      "HlmDialogDescriptionDirective": {
        "file": "ui/dialog/helm/src/lib/hlm-dialog-description.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmDialogDescription]"
      },
      "HlmDialogFooterComponent": {
        "file": "ui/dialog/helm/src/lib/hlm-dialog-footer.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-dialog-footer"
      },
      "HlmDialogHeaderComponent": {
        "file": "ui/dialog/helm/src/lib/hlm-dialog-header.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-dialog-header"
      },
      "HlmDialogOverlayDirective": {
        "file": "ui/dialog/helm/src/lib/hlm-dialog-overlay.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmDialogOverlay],brn-dialog-overlay[hlm]"
      },
      "HlmDialogTitleDirective": {
        "file": "ui/dialog/helm/src/lib/hlm-dialog-title.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmDialogTitle]"
      },
      "HlmDialogComponent": {
        "file": "ui/dialog/helm/src/lib/hlm-dialog.component.ts",
        "inputs": [],
        "outputs": [],
        "selector": "hlm-dialog",
        "exportAs": "hlmDialog"
      }
    }
  },
  "hover-card": {
    "brain": {
      "BrnHoverCardComponent": {
        "file": "brain/hover-card/src/lib/brn-hover-card.component.ts",
        "inputs": [],
        "outputs": [],
        "selector": "brn-hover-card"
      }
    },
    "helm": {
      "HlmHoverCardContentComponent": {
        "file": "ui/hover-card/helm/src/lib/hlm-hover-card-content.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-hover-card-content"
      }
    }
  },
  "label": {
    "brain": {
      "BrnLabelDirective": {
        "file": "brain/label/src/lib/brn-label.directive.ts",
        "inputs": [
          {
            "name": "id",
            "type": "string",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[brnLabel]"
      }
    },
    "helm": {
      "HlmLabelDirective": {
        "file": "ui/label/helm/src/lib/hlm-label.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "variant",
            "type": "LabelVariants['variant']",
            "description": ""
          },
          {
            "name": "error",
            "type": "LabelVariants['error']",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmLabel]"
      }
    }
  },
  "menu": {
    "brain": {
      "BrnContextMenuTriggerDirective": {
        "file": "brain/menu/src/lib/brn-context-menu-trigger.directive.ts",
        "inputs": [
          {
            "name": "brnCtxMenuTriggerFor",
            "type": "TemplateRef<unknown> | null",
            "description": ""
          },
          {
            "name": "brnCtxMenuTriggerData",
            "type": "unknown",
            "description": ""
          },
          {
            "name": "align",
            "type": "BrnMenuAlign",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[brnCtxMenuTriggerFor]"
      },
      "BrnMenuBarDirective": {
        "file": "brain/menu/src/lib/brn-menu-bar.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnMenuBar]"
      },
      "BrnMenuGroupDirective": {
        "file": "brain/menu/src/lib/brn-menu-group.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnMenuGroup]"
      },
      "BrnMenuItemCheckboxDirective": {
        "file": "brain/menu/src/lib/brn-menu-item-checkbox.directive.ts",
        "inputs": [
          {
            "name": "checked",
            "type": "unknown",
            "description": ""
          },
          {
            "name": "disabled",
            "type": "unknown",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[brnMenuItemCheckbox]"
      },
      "BrnMenuItemRadioDirective": {
        "file": "brain/menu/src/lib/brn-menu-item-radio.directive.ts",
        "inputs": [
          {
            "name": "checked",
            "type": "unknown",
            "description": ""
          },
          {
            "name": "disabled",
            "type": "unknown",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[brnMenuItemRadio]"
      },
      "BrnMenuItemDirective": {
        "file": "brain/menu/src/lib/brn-menu-item.directive.ts",
        "inputs": [
          {
            "name": "disabled",
            "type": "unknown",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[brnMenuItem]"
      },
      "BrnMenuTriggerDirective": {
        "file": "brain/menu/src/lib/brn-menu-trigger.directive.ts",
        "inputs": [
          {
            "name": "align",
            "type": "BrnMenuAlign",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[brnMenuTriggerFor]"
      },
      "BrnMenuDirective": {
        "file": "brain/menu/src/lib/brn-menu.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnMenu],[brnSubMenu]"
      }
    },
    "helm": {
      "HlmMenuBarItemDirective": {
        "file": "ui/menu/helm/src/lib/hlm-menu-bar-item.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmMenuBarItem]"
      },
      "HlmMenuBarComponent": {
        "file": "ui/menu/helm/src/lib/hlm-menu-bar.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-menu-bar"
      },
      "HlmMenuGroupComponent": {
        "file": "ui/menu/helm/src/lib/hlm-menu-group.component.ts",
        "inputs": [],
        "outputs": [],
        "selector": "hlm-menu-group"
      },
      "HlmMenuItemCheckComponent": {
        "file": "ui/menu/helm/src/lib/hlm-menu-item-check.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-menu-item-check"
      },
      "HlmMenuItemCheckboxDirective": {
        "file": "ui/menu/helm/src/lib/hlm-menu-item-checkbox.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmMenuItemCheckbox]"
      },
      "HlmMenuItemIconDirective": {
        "file": "ui/menu/helm/src/lib/hlm-menu-item-icon.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmMenuIcon]"
      },
      "HlmMenuItemRadioComponent": {
        "file": "ui/menu/helm/src/lib/hlm-menu-item-radio.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-menu-item-radio"
      },
      "HlmMenuItemRadioDirective": {
        "file": "ui/menu/helm/src/lib/hlm-menu-item-radio.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmMenuItemRadio]"
      },
      "HlmMenuItemSubIndicatorComponent": {
        "file": "ui/menu/helm/src/lib/hlm-menu-item-sub-indicator.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-menu-item-sub-indicator"
      },
      "HlmMenuItemDirective": {
        "file": "ui/menu/helm/src/lib/hlm-menu-item.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmMenuItem]"
      },
      "HlmMenuLabelComponent": {
        "file": "ui/menu/helm/src/lib/hlm-menu-label.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-menu-label"
      },
      "HlmMenuSeparatorComponent": {
        "file": "ui/menu/helm/src/lib/hlm-menu-separator.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-menu-separator"
      },
      "HlmMenuShortcutComponent": {
        "file": "ui/menu/helm/src/lib/hlm-menu-shortcut.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-menu-shortcut"
      },
      "HlmMenuComponent": {
        "file": "ui/menu/helm/src/lib/hlm-menu.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-menu"
      },
      "HlmSubMenuComponent": {
        "file": "ui/menu/helm/src/lib/hlm-sub-menu.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-sub-menu"
      }
    }
  },
  "popover": {
    "brain": {
      "BrnPopoverCloseDirective": {
        "file": "brain/popover/src/lib/brn-popover-close.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "button[brnPopoverClose]"
      },
      "BrnPopoverContentDirective": {
        "file": "brain/popover/src/lib/brn-popover-content.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnPopoverContent]"
      },
      "BrnPopoverTriggerDirective": {
        "file": "brain/popover/src/lib/brn-popover-trigger.directive.ts",
        "inputs": [
          {
            "name": "brnPopoverTriggerFor",
            "type": "BrnPopoverComponent | undefined",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "button[brnPopoverTrigger],button[brnPopoverTriggerFor]"
      },
      "BrnPopoverComponent": {
        "file": "brain/popover/src/lib/brn-popover.component.ts",
        "inputs": [
          {
            "name": "align",
            "type": "BrnPopoverAlign",
            "description": ""
          },
          {
            "name": "sideOffset",
            "type": "unknown",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "brn-popover",
        "exportAs": "brnPopover"
      }
    },
    "helm": {
      "HlmPopoverCloseDirective": {
        "file": "ui/popover/helm/src/lib/hlm-popover-close.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmPopoverClose],[brnPopoverClose][hlm]"
      },
      "HlmPopoverContentDirective": {
        "file": "ui/popover/helm/src/lib/hlm-popover-content.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmPopoverContent],[brnPopoverContent][hlm]"
      }
    }
  },
  "progress": {
    "brain": {
      "BrnProgressIndicatorComponent": {
        "file": "brain/progress/src/lib/brn-progress-indicator.component.ts",
        "inputs": [],
        "outputs": [],
        "selector": "brn-progress-indicator"
      },
      "BrnProgressComponent": {
        "file": "brain/progress/src/lib/brn-progress.component.ts",
        "inputs": [
          {
            "name": "value",
            "type": "number | null | undefined",
            "description": ""
          },
          {
            "name": "max",
            "type": "number",
            "description": ""
          },
          {
            "name": "getValueLabel",
            "type": "BrnProgressLabelFn",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "brn-progress",
        "exportAs": "brnProgress"
      }
    },
    "helm": {
      "HlmProgressIndicatorDirective": {
        "file": "ui/progress/helm/src/lib/hlm-progress-indicator.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmProgressIndicator],brn-progress-indicator[hlm]"
      },
      "HlmProgressDirective": {
        "file": "ui/progress/helm/src/lib/hlm-progress.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmProgress],brn-progress[hlm]"
      }
    }
  },
  "radio-group": {
    "brain": {
      "BrnRadioGroupDirective": {
        "file": "brain/radio-group/src/lib/brn-radio-group.directive.ts",
        "inputs": [
          {
            "name": "name",
            "type": "unknown",
            "description": ""
          },
          {
            "name": "disabled",
            "type": "boolean",
            "description": "Whether the radio group is disabled."
          },
          {
            "name": "required",
            "type": "boolean",
            "description": "Whether the radio group should be required."
          },
          {
            "name": "direction",
            "type": "'ltr' | 'rtl' | null",
            "description": "The direction of the radio group."
          }
        ],
        "outputs": [
          {
            "name": "change",
            "type": "BrnRadioChange<T>",
            "description": "Event emitted when the group value changes."
          }
        ],
        "selector": "[brnRadioGroup]"
      },
      "BrnRadioComponent": {
        "file": "brain/radio-group/src/lib/brn-radio.component.ts",
        "inputs": [
          {
            "name": "disabled",
            "type": "boolean",
            "description": "Whether the radio button is disabled."
          },
          {
            "name": "id",
            "type": "string | undefined",
            "description": "The unique ID for the radio button input. If none is supplied, it will be auto-generated."
          },
          {
            "name": "ariaLabel",
            "type": "string | undefined",
            "description": ""
          },
          {
            "name": "ariaLabelledby",
            "type": "string | undefined",
            "description": ""
          },
          {
            "name": "ariaDescribedby",
            "type": "string | undefined",
            "description": ""
          },
          {
            "name": "required",
            "type": "boolean",
            "description": "Whether the radio button is required."
          }
        ],
        "outputs": [
          {
            "name": "change",
            "type": "BrnRadioChange<T>",
            "description": "Event emitted when the checked state of this radio button changes."
          }
        ],
        "selector": "brn-radio",
        "exportAs": "brnRadio"
      }
    },
    "helm": {
      "HlmRadioGroupComponent": {
        "file": "ui/radio-group/helm/src/lib/hlm-radio-group.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-radio-group"
      },
      "HlmRadioIndicatorComponent": {
        "file": "ui/radio-group/helm/src/lib/hlm-radio-indicator.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-radio-indicator"
      },
      "HlmRadioComponent": {
        "file": "ui/radio-group/helm/src/lib/hlm-radio.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "id",
            "type": "string | undefined",
            "description": "Used to set the id on the underlying brn element."
          },
          {
            "name": "ariaLabel",
            "type": "string | undefined",
            "description": "Used to set the aria-label attribute on the underlying brn element."
          },
          {
            "name": "ariaLabelledby",
            "type": "string | undefined",
            "description": "Used to set the aria-labelledby attribute on the underlying brn element."
          },
          {
            "name": "ariaDescribedby",
            "type": "string | undefined",
            "description": "Used to set the aria-describedby attribute on the underlying brn element."
          },
          {
            "name": "required",
            "type": "unknown",
            "description": "Whether the checkbox is required."
          },
          {
            "name": "disabled",
            "type": "unknown",
            "description": "Whether the checkbox is disabled."
          }
        ],
        "outputs": [
          {
            "name": "change",
            "type": "BrnRadioChange<T>",
            "description": "Event emitted when the checked state of this radio button changes."
          }
        ],
        "selector": "hlm-radio"
      }
    }
  },
  "select": {
    "brain": {
      "BrnSelectScrollUpDirective": {
        "file": "brain/select/src/lib/brn-select-content.component.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnSelectScrollUp], brn-select-scroll-up, hlm-select-scroll-up:not(noHlm)"
      },
      "BrnSelectScrollDownDirective": {
        "file": "brain/select/src/lib/brn-select-content.component.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnSelectScrollDown], brn-select-scroll-down, hlm-select-scroll-down:not(noHlm)"
      },
      "BrnSelectContentComponent": {
        "file": "brain/select/src/lib/brn-select-content.component.ts",
        "inputs": [],
        "outputs": [],
        "selector": "brn-select-content, hlm-select-content:not(noHlm)"
      },
      "BrnSelectGroupDirective": {
        "file": "brain/select/src/lib/brn-select-group.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnSelectGroup]"
      },
      "BrnSelectLabelDirective": {
        "file": "brain/select/src/lib/brn-select-label.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnSelectLabel]"
      },
      "BrnSelectOptionDirective": {
        "file": "brain/select/src/lib/brn-select-option.directive.ts",
        "inputs": [
          {
            "name": "id",
            "type": "unknown",
            "description": ""
          },
          {
            "name": "value",
            "type": "T",
            "description": ""
          },
          {
            "name": "_disabled",
            "type": "boolean",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[brnOption]"
      },
      "BrnSelectPlaceholderDirective": {
        "file": "brain/select/src/lib/brn-select-placeholder.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnSelectPlaceholder], [hlmSelectPlaceholder]"
      },
      "BrnSelectTriggerDirective": {
        "file": "brain/select/src/lib/brn-select-trigger.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnSelectTrigger]"
      },
      "BrnSelectValueComponent": {
        "file": "brain/select/src/lib/brn-select-value.component.ts",
        "inputs": [
          {
            "name": "transformFn",
            "type": "(values: (string | undefined)[]) => any",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "brn-select-value, hlm-select-value"
      },
      "BrnSelectValueDirective": {
        "file": "brain/select/src/lib/brn-select-value.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnSelectValue], [hlmSelectValue]"
      },
      "BrnSelectComponent": {
        "file": "brain/select/src/lib/brn-select.component.ts",
        "inputs": [
          {
            "name": "id",
            "type": "string",
            "description": ""
          },
          {
            "name": "multiple",
            "type": "boolean",
            "description": ""
          },
          {
            "name": "placeholder",
            "type": "string",
            "description": ""
          },
          {
            "name": "disabled",
            "type": "boolean",
            "description": ""
          },
          {
            "name": "dir",
            "type": "BrnReadDirection",
            "description": ""
          },
          {
            "name": "closeDelay",
            "type": "number",
            "description": ""
          },
          {
            "name": "compareWith",
            "type": "(o1: T, o2: T) => boolean",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "brn-select, hlm-select"
      }
    },
    "helm": {
      "HlmSelectContentDirective": {
        "file": "ui/select/helm/src/lib/hlm-select-content.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "stickyLabels",
            "type": "boolean",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmSelectContent], hlm-select-content"
      },
      "HlmSelectGroupDirective": {
        "file": "ui/select/helm/src/lib/hlm-select-group.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmSelectGroup], hlm-select-group"
      },
      "HlmSelectLabelDirective": {
        "file": "ui/select/helm/src/lib/hlm-select-label.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmSelectLabel], hlm-select-label"
      },
      "HlmSelectOptionComponent": {
        "file": "ui/select/helm/src/lib/hlm-select-option.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-option"
      },
      "HlmSelectScrollDownComponent": {
        "file": "ui/select/helm/src/lib/hlm-select-scroll-down.component.ts",
        "inputs": [],
        "outputs": [],
        "selector": "hlm-select-scroll-down"
      },
      "HlmSelectScrollUpComponent": {
        "file": "ui/select/helm/src/lib/hlm-select-scroll-up.component.ts",
        "inputs": [],
        "outputs": [],
        "selector": "hlm-select-scroll-up"
      },
      "HlmSelectTriggerComponent": {
        "file": "ui/select/helm/src/lib/hlm-select-trigger.component.ts",
        "inputs": [
          {
            "name": "_size",
            "type": "SelectTriggerVariants['size']",
            "description": ""
          },
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-select-trigger"
      },
      "HlmSelectValueDirective": {
        "file": "ui/select/helm/src/lib/hlm-select-value.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-select-value,[hlmSelectValue], brn-select-value[hlm]"
      },
      "HlmSelectDirective": {
        "file": "ui/select/helm/src/lib/hlm-select.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-select, brn-select [hlm]"
      }
    }
  },
  "separator": {
    "brain": {
      "BrnSeparatorComponent": {
        "file": "brain/separator/src/lib/brn-separator.component.ts",
        "inputs": [
          {
            "name": "orientation",
            "type": "BrnSeparatorOrientation",
            "description": ""
          },
          {
            "name": "decorative",
            "type": "boolean",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "brn-separator"
      }
    },
    "helm": {
      "HlmSeparatorDirective": {
        "file": "ui/separator/helm/src/lib/hlm-separator.directive.ts",
        "inputs": [
          {
            "name": "orientation",
            "type": "HlmSeparatorOrientation",
            "description": ""
          },
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmSeparator],brn-separator[hlm]"
      }
    }
  },
  "sheet": {
    "brain": {
      "BrnSheetCloseDirective": {
        "file": "brain/sheet/src/lib/brn-sheet-close.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "button[brnSheetClose]"
      },
      "BrnSheetContentDirective": {
        "file": "brain/sheet/src/lib/brn-sheet-content.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnSheetContent]"
      },
      "BrnSheetDescriptionDirective": {
        "file": "brain/sheet/src/lib/brn-sheet-description.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnSheetDescription]"
      },
      "BrnSheetOverlayComponent": {
        "file": "brain/sheet/src/lib/brn-sheet-overlay.component.ts",
        "inputs": [],
        "outputs": [],
        "selector": "brn-sheet-overlay"
      },
      "BrnSheetTitleDirective": {
        "file": "brain/sheet/src/lib/brn-sheet-title.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnSheetTitle]"
      },
      "BrnSheetTriggerDirective": {
        "file": "brain/sheet/src/lib/brn-sheet-trigger.directive.ts",
        "inputs": [
          {
            "name": "side",
            "type": "'top' | 'bottom' | 'left' | 'right' | undefined",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "button[brnSheetTrigger]"
      },
      "BrnSheetComponent": {
        "file": "brain/sheet/src/lib/brn-sheet.component.ts",
        "inputs": [
          {
            "name": "sideInput",
            "type": "'top' | 'bottom' | 'left' | 'right'",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "brn-sheet",
        "exportAs": "brnSheet"
      }
    },
    "helm": {
      "HlmSheetCloseDirective": {
        "file": "ui/sheet/helm/src/lib/hlm-sheet-close.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmSheetClose],[brnSheetClose][hlm]"
      },
      "HlmSheetContentComponent": {
        "file": "ui/sheet/helm/src/lib/hlm-sheet-content.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-sheet-content"
      },
      "HlmSheetDescriptionDirective": {
        "file": "ui/sheet/helm/src/lib/hlm-sheet-description.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmSheetDescription]"
      },
      "HlmSheetFooterComponent": {
        "file": "ui/sheet/helm/src/lib/hlm-sheet-footer.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-sheet-footer"
      },
      "HlmSheetHeaderComponent": {
        "file": "ui/sheet/helm/src/lib/hlm-sheet-header.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-sheet-header"
      },
      "HlmSheetOverlayDirective": {
        "file": "ui/sheet/helm/src/lib/hlm-sheet-overlay.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmSheetOverlay],brn-sheet-overlay[hlm]"
      },
      "HlmSheetTitleDirective": {
        "file": "ui/sheet/helm/src/lib/hlm-sheet-title.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmSheetTitle]"
      },
      "HlmSheetComponent": {
        "file": "ui/sheet/helm/src/lib/hlm-sheet.component.ts",
        "inputs": [],
        "outputs": [],
        "selector": "hlm-sheet",
        "exportAs": "hlmSheet"
      }
    }
  },
  "slider": {
    "brain": {
      "BrnSliderThumbDirective": {
        "file": "brain/slider/src/lib/brn-slider-thumb.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnSliderThumb]"
      },
      "BrnSliderTickMarkDirective": {
        "file": "brain/slider/src/lib/brn-slider-tick-mark.directive.ts",
        "inputs": [
          {
            "name": "data",
            "type": "{ tickMarkIndex: number; totalTickMarks: number }",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[brnSliderTickMark]"
      },
      "BrnSliderTrackActiveFillDirective": {
        "file": "brain/slider/src/lib/brn-slider-track-active-fill.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnSliderTrackActiveFill]"
      },
      "BrnSliderInputDirective": {
        "file": "brain/slider/src/lib/brn-slider-track.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "input[brnSliderInput]"
      },
      "BrnSliderDirective": {
        "file": "brain/slider/src/lib/brn-slider-track.directive.ts",
        "inputs": [
          {
            "name": "label",
            "type": "BrnLabelDirective | null",
            "description": ""
          },
          {
            "name": "ariaLabel",
            "type": "string | null",
            "description": ""
          },
          {
            "name": "dir",
            "type": "Direction",
            "description": "Used only as an input."
          },
          {
            "name": "step",
            "type": "number",
            "description": ""
          },
          {
            "name": "showTickMarks",
            "type": "boolean",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[brnSlider]",
        "exportAs": "brnSlider"
      },
      "BrnSliderTrackDirective": {
        "file": "brain/slider/src/lib/brn-slider-track.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnSliderTrack]"
      }
    },
    "helm": {
      "HlmSliderInputDirective": {
        "file": "ui/slider/helm/src/lib/hlm-slider-input.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "input[hlmSliderInput], input[brnSliderInput]"
      },
      "HlmSliderThumbDirective": {
        "file": "ui/slider/helm/src/lib/hlm-slider-thumb.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-slider-thumb, brn-slider-thumb [hlm]"
      },
      "HlmSliderTickMarkDirective": {
        "file": "ui/slider/helm/src/lib/hlm-slider-tick-mark.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "active",
            "type": "boolean",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmSliderTickMark]"
      },
      "HlmSliderTickMarksDirective": {
        "file": "ui/slider/helm/src/lib/hlm-slider-tick-marks.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmSliderTickMarks]"
      },
      "HlmSliderTrackActiveFillDirective": {
        "file": "ui/slider/helm/src/lib/hlm-slider-track-active-fill.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmSliderTrackActiveFill]"
      },
      "HlmSliderTrackActiveDirective": {
        "file": "ui/slider/helm/src/lib/hlm-slider-track-active.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmSliderTrackActive]"
      },
      "HlmSliderTrackInactiveDirective": {
        "file": "ui/slider/helm/src/lib/hlm-slider-track-inactive.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmSliderTrackInactive]"
      },
      "HlmSliderTrackComponent": {
        "file": "ui/slider/helm/src/lib/hlm-slider-track.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-slider-track, brn-slider-track [hlm]"
      },
      "HlmSliderComponent": {
        "file": "ui/slider/helm/src/lib/hlm-slider.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-slider, brn-slider [hlm]"
      }
    }
  },
  "switch": {
    "brain": {
      "BrnSwitchThumbComponent": {
        "file": "brain/switch/src/lib/brn-switch-thumb.component.ts",
        "inputs": [],
        "outputs": [],
        "selector": "brn-switch-thumb"
      },
      "BrnSwitchComponent": {
        "file": "brain/switch/src/lib/brn-switch.component.ts",
        "inputs": [
          {
            "name": "id",
            "type": "string | null",
            "description": "Used to set the id on the underlying input element."
          },
          {
            "name": "name",
            "type": "string | null",
            "description": "Used to set the name attribute on the underlying input element."
          },
          {
            "name": "ariaLabel",
            "type": "string | null",
            "description": "Used to set the aria-label attribute on the underlying input element."
          },
          {
            "name": "ariaLabelledby",
            "type": "string | null",
            "description": "Used to set the aria-labelledby attribute on the underlying input element."
          },
          {
            "name": "ariaDescribedby",
            "type": "string | null",
            "description": "Used to set the aria-describedby attribute on the underlying input element."
          },
          {
            "name": "required",
            "type": "unknown",
            "description": ""
          },
          {
            "name": "disabled",
            "type": "boolean",
            "description": ""
          }
        ],
        "outputs": [
          {
            "name": "changed",
            "type": "boolean",
            "description": ""
          },
          {
            "name": "touched",
            "type": "void",
            "description": ""
          }
        ],
        "selector": "brn-switch"
      }
    },
    "helm": {
      "HlmSwitchThumbDirective": {
        "file": "ui/switch/helm/src/lib/hlm-switch-thumb.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "brn-switch-thumb[hlm],[hlmSwitchThumb]"
      },
      "HlmSwitchComponent": {
        "file": "ui/switch/helm/src/lib/hlm-switch.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "disabledInput",
            "type": "boolean",
            "description": "The disabled state of the switch."
          },
          {
            "name": "id",
            "type": "string | null",
            "description": "Used to set the id on the underlying brn element."
          },
          {
            "name": "ariaLabel",
            "type": "string | null",
            "description": "Used to set the aria-label attribute on the underlying brn element."
          },
          {
            "name": "ariaLabelledby",
            "type": "string | null",
            "description": "Used to set the aria-labelledby attribute on the underlying brn element."
          },
          {
            "name": "ariaDescribedby",
            "type": "string | null",
            "description": "Used to set the aria-describedby attribute on the underlying brn element."
          }
        ],
        "outputs": [
          {
            "name": "changed",
            "type": "boolean",
            "description": "Emits when the checked state of the switch changes."
          }
        ],
        "selector": "hlm-switch"
      }
    }
  },
  "table": {
    "brain": {
      "BrnCellDefDirective": {
        "file": "brain/table/src/lib/brn-cell-def.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnCellDef]",
        "exportAs": "brnCellDef"
      },
      "BrnColumnDefComponent": {
        "file": "brain/table/src/lib/brn-column-def.component.ts",
        "inputs": [
          {
            "name": "class",
            "type": "unknown",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "brn-column-def"
      },
      "BrnFooterDefDirective": {
        "file": "brain/table/src/lib/brn-footer-def.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnFooterDef]",
        "exportAs": "brnFooterDef"
      },
      "BrnHeaderDefDirective": {
        "file": "brain/table/src/lib/brn-header-def.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnHeaderDef]",
        "exportAs": "brnHeaderDef"
      },
      "BrnPaginatorDirective": {
        "file": "brain/table/src/lib/brn-paginator.directive.ts",
        "inputs": [
          {
            "name": "onStateChange",
            "type": "(state: import(\"/Users/sammymohamed/Desktop/projects/open-source/spartan/libs/brain/table/src/lib/brn-paginator.directive\").PaginatorState) => void",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[brnPaginator]",
        "exportAs": "brnPaginator"
      },
      "BrnTableComponent": {
        "file": "brain/table/src/lib/brn-table.component.ts",
        "inputs": [
          {
            "name": "dataSource",
            "type": "import(\"/Users/sammymohamed/Desktop/projects/open-source/spartan/libs/brain/table/src/lib/brn-table.component\").BrnTableDataSourceInput<T>",
            "description": ""
          },
          {
            "name": "fixedLayout",
            "type": "boolean",
            "description": ""
          },
          {
            "name": "multiTemplateDataRows",
            "type": "boolean",
            "description": ""
          },
          {
            "name": "displayedColumns",
            "type": "string[]",
            "description": ""
          },
          {
            "name": "customTemplateDataRows",
            "type": "boolean",
            "description": ""
          },
          {
            "name": "onRowClick",
            "type": "(element: T) => void",
            "description": ""
          },
          {
            "name": "stickyHeader",
            "type": "boolean",
            "description": ""
          },
          {
            "name": "tableClasses",
            "type": "string",
            "description": ""
          },
          {
            "name": "headerRowClasses",
            "type": "string",
            "description": ""
          },
          {
            "name": "bodyRowClasses",
            "type": "string",
            "description": ""
          }
        ],
        "outputs": [
          {
            "name": "contentChanged",
            "type": "import(\"/Users/sammymohamed/Desktop/projects/open-source/spartan/node_modules/.pnpm/@angular+core@19.2.1_rxjs@7.8.1_zone.js@0.15.0/node_modules/@angular/core/index\").EventEmitter<void>",
            "description": ""
          }
        ],
        "selector": "brn-table"
      }
    },
    "helm": {
      "HlmCaptionComponent": {
        "file": "ui/table/helm/src/lib/hlm-caption.component.ts",
        "inputs": [
          {
            "name": "id",
            "type": "string | null | undefined",
            "description": ""
          },
          {
            "name": "hidden",
            "type": "unknown",
            "description": ""
          },
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-caption"
      },
      "HlmTableComponent": {
        "file": "ui/table/helm/src/lib/hlm-table.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "_labeledByInput",
            "type": "string | null | undefined",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-table"
      },
      "HlmTableDirective": {
        "file": "ui/table/helm/src/lib/hlm-table.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[hlmTable],brn-table[hlm]"
      },
      "HlmTdComponent": {
        "file": "ui/table/helm/src/lib/hlm-td.component.ts",
        "inputs": [
          {
            "name": "truncate",
            "type": "unknown",
            "description": ""
          },
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-td"
      },
      "HlmThComponent": {
        "file": "ui/table/helm/src/lib/hlm-th.component.ts",
        "inputs": [
          {
            "name": "truncate",
            "type": "unknown",
            "description": ""
          },
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-th"
      },
      "HlmTrowComponent": {
        "file": "ui/table/helm/src/lib/hlm-trow.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-trow"
      }
    }
  },
  "tabs": {
    "brain": {
      "BrnTabsListDirective": {
        "file": "brain/tabs/src/lib/brn-tabs-list.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnTabsList]",
        "exportAs": "brnTabsList"
      },
      "BrnTabsPaginatedListDirective": {
        "file": "brain/tabs/src/lib/brn-tabs-paginated-list.directive.ts",
        "inputs": [
          {
            "name": "disablePagination",
            "type": "unknown",
            "description": "Whether pagination should be disabled. This can be used to avoid unnecessary\nlayout recalculations if it's known that pagination won't be required."
          }
        ],
        "outputs": [
          {
            "name": "selectFocusedIndex",
            "type": "number",
            "description": "Event emitted when the option is selected."
          },
          {
            "name": "indexFocused",
            "type": "number",
            "description": "Event emitted when a label is focused."
          }
        ],
        "selector": null,
        "exportAs": null
      },
      "BrnTabsContentDirective": {
        "file": "brain/tabs/src/lib/brn-tabs-trigger.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnTabsContent]",
        "exportAs": "brnTabsContent"
      },
      "BrnTabsDirective": {
        "file": "brain/tabs/src/lib/brn-tabs-trigger.directive.ts",
        "inputs": [
          {
            "name": "orientation",
            "type": "BrnTabsOrientation",
            "description": ""
          },
          {
            "name": "direction",
            "type": "BrnTabsDirection",
            "description": ""
          },
          {
            "name": "activationMode",
            "type": "BrnActivationMode",
            "description": ""
          }
        ],
        "outputs": [
          {
            "name": "tabActivated",
            "type": "string",
            "description": ""
          }
        ],
        "selector": "[brnTabs]",
        "exportAs": "brnTabs"
      },
      "BrnTabsTriggerDirective": {
        "file": "brain/tabs/src/lib/brn-tabs-trigger.directive.ts",
        "inputs": [
          {
            "name": "disabled",
            "type": "boolean",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "button[brnTabsTrigger]",
        "exportAs": "brnTabsTrigger"
      }
    },
    "helm": {
      "HlmTabsContentDirective": {
        "file": "ui/tabs/helm/src/lib/hlm-tabs-content.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmTabsContent]"
      },
      "HlmTabsListComponent": {
        "file": "ui/tabs/helm/src/lib/hlm-tabs-list.component.ts",
        "inputs": [
          {
            "name": "orientation",
            "type": "ListVariants['orientation']",
            "description": ""
          },
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-tabs-list"
      },
      "HlmTabsPaginatedListComponent": {
        "file": "ui/tabs/helm/src/lib/hlm-tabs-paginated-list.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "tabLisClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "paginationButtonClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-paginated-tabs-list"
      },
      "HlmTabsTriggerDirective": {
        "file": "ui/tabs/helm/src/lib/hlm-tabs-trigger.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmTabsTrigger]"
      },
      "HlmTabsComponent": {
        "file": "ui/tabs/helm/src/lib/hlm-tabs.component.ts",
        "inputs": [],
        "outputs": [],
        "selector": "hlm-tabs"
      }
    }
  },
  "toggle": {
    "brain": {
      "BrnToggleGroupComponent": {
        "file": "brain/toggle/src/lib/brn-toggle-group.component.ts",
        "inputs": [
          {
            "name": "vertical",
            "type": "boolean",
            "description": "Whether the button toggle group has a vertical orientation"
          },
          {
            "name": "nullable",
            "type": "boolean",
            "description": "Whether no button toggles need to be selected."
          },
          {
            "name": "multiple",
            "type": "boolean",
            "description": "Whether multiple button toggles can be selected."
          },
          {
            "name": "disabled",
            "type": "boolean",
            "description": "Whether the button toggle group is disabled."
          }
        ],
        "outputs": [
          {
            "name": "change",
            "type": "BrnButtonToggleChange<T>",
            "description": "Emit event when the group value changes."
          }
        ],
        "selector": "brn-toggle-group",
        "exportAs": "brnToggleGroup"
      },
      "BrnToggleDirective": {
        "file": "brain/toggle/src/lib/brn-toggle.directive.ts",
        "inputs": [
          {
            "name": "id",
            "type": "unknown",
            "description": "The id of the toggle."
          },
          {
            "name": "value",
            "type": "T",
            "description": "The value this toggle represents."
          },
          {
            "name": "disabled",
            "type": "boolean",
            "description": "Whether the toggle is disabled."
          },
          {
            "name": "disableToggleClick",
            "type": "boolean",
            "description": "Whether the toggle is responds to click events."
          }
        ],
        "outputs": [],
        "selector": "button[hlmToggle], button[brnToggle]"
      }
    },
    "helm": {
      "HlmToggleGroupDirective": {
        "file": "ui/toggle/helm/src/lib/hlm-toggle-group.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "brn-toggle-group[hlm],[hlmToggleGroup]"
      },
      "HlmToggleDirective": {
        "file": "ui/toggle/helm/src/lib/hlm-toggle.directive.ts",
        "inputs": [
          {
            "name": "variant",
            "type": "ToggleVariants['variant']",
            "description": ""
          },
          {
            "name": "size",
            "type": "ToggleVariants['size']",
            "description": ""
          },
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmToggle],[brnToggle][hlm]"
      }
    }
  },
  "tooltip": {
    "brain": {
      "BrnTooltipContentComponent": {
        "file": "brain/tooltip/src/lib/brn-tooltip-content.component.ts",
        "inputs": [],
        "outputs": [],
        "selector": "brn-tooltip-content"
      },
      "BrnTooltipContentDirective": {
        "file": "brain/tooltip/src/lib/brn-tooltip-content.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnTooltipContent]"
      },
      "BrnTooltipTriggerDirective": {
        "file": "brain/tooltip/src/lib/brn-tooltip-trigger.directive.ts",
        "inputs": [
          {
            "name": "position",
            "type": "TooltipPosition",
            "description": "Allows the user to define the position of the tooltip relative to the parent element"
          },
          {
            "name": "positionAtOrigin",
            "type": "unknown",
            "description": "Whether tooltip should be relative to the click or touch origin\ninstead of outside the element bounding box."
          },
          {
            "name": "brnTooltipDisabled",
            "type": "unknown",
            "description": "Disables the display of the tooltip."
          },
          {
            "name": "showDelay",
            "type": "unknown",
            "description": "The default delay in ms before showing the tooltip after show is called"
          },
          {
            "name": "hideDelay",
            "type": "unknown",
            "description": "The default delay in ms before hiding the tooltip after hide is called"
          },
          {
            "name": "exitAnimationDuration",
            "type": "unknown",
            "description": "The default duration in ms that exit animation takes before hiding"
          },
          {
            "name": "tooltipContentClasses",
            "type": "string",
            "description": "The default delay in ms before hiding the tooltip after hide is called"
          },
          {
            "name": "touchGestures",
            "type": "TooltipTouchGestures",
            "description": "How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\nuses a long press gesture to show and hide, however it can conflict with the native browser\ngestures. To work around the conflict, Angular Material disables native gestures on the\ntrigger, but that might not be desirable on particular elements (e.g. inputs and draggable\nelements). The different values for this option configure the touch event handling as follows:\n- `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n  browser gestures on particular elements. In particular, it allows text selection on inputs\n  and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n- `on` - Enables touch gestures for all elements and disables native\n  browser gestures with no exceptions.\n- `off` - Disables touch gestures. Note that this will prevent the tooltip from\n  showing on touch devices."
          },
          {
            "name": "ariaDescribedBy",
            "type": "unknown",
            "description": "The message to be used to describe the aria in the tooltip"
          },
          {
            "name": "brnTooltipTrigger",
            "type": "string | TemplateRef<unknown> | null",
            "description": "The content to be displayed in the tooltip"
          }
        ],
        "outputs": [],
        "selector": "[brnTooltipTrigger]",
        "exportAs": "brnTooltipTrigger"
      },
      "BrnTooltipDirective": {
        "file": "brain/tooltip/src/lib/brn-tooltip.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[brnTooltip]"
      }
    },
    "helm": {
      "HlmTooltipTriggerDirective": {
        "file": "ui/tooltip/helm/src/lib/hlm-tooltip-trigger.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[hlmTooltipTrigger]"
      },
      "HlmTooltipComponent": {
        "file": "ui/tooltip/helm/src/lib/hlm-tooltip.component.ts",
        "inputs": [],
        "outputs": [],
        "selector": "hlm-tooltip"
      }
    }
  },
  "alert": {
    "helm": {
      "HlmAlertDescriptionDirective": {
        "file": "ui/alert/helm/src/lib/hlm-alert-description.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmAlertDesc],[hlmAlertDescription]"
      },
      "HlmAlertIconDirective": {
        "file": "ui/alert/helm/src/lib/hlm-alert-icon.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "[hlmAlertIcon]"
      },
      "HlmAlertTitleDirective": {
        "file": "ui/alert/helm/src/lib/hlm-alert-title.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmAlertTitle]"
      },
      "HlmAlertDirective": {
        "file": "ui/alert/helm/src/lib/hlm-alert.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "variant",
            "type": "AlertVariants['variant']",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmAlert]"
      }
    }
  },
  "aspect-ratio": {
    "helm": {
      "HlmAspectRatioDirective": {
        "file": "ui/aspect-ratio/helm/src/lib/helm-aspect-ratio.directive.ts",
        "inputs": [
          {
            "name": "ratio",
            "type": "unknown",
            "description": ""
          },
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmAspectRatio]"
      }
    }
  },
  "badge": {
    "helm": {
      "HlmBadgeDirective": {
        "file": "ui/badge/helm/src/lib/hlm-badge.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "variant",
            "type": "BadgeVariants['variant']",
            "description": ""
          },
          {
            "name": "static",
            "type": "BadgeVariants['static']",
            "description": ""
          },
          {
            "name": "size",
            "type": "BadgeVariants['size']",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmBadge]"
      }
    }
  },
  "breadcrumb": {
    "helm": {
      "HlmBreadcrumbEllipsisComponent": {
        "file": "ui/breadcrumb/helm/src/lib/breadcrumb-ellipsis.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-breadcrumb-ellipsis"
      },
      "HlmBreadcrumbItemDirective": {
        "file": "ui/breadcrumb/helm/src/lib/breadcrumb-item.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmBreadcrumbItem]"
      },
      "HlmBreadcrumbLinkDirective": {
        "file": "ui/breadcrumb/helm/src/lib/breadcrumb-link.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "link",
            "type": "RouterLink['routerLink']",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmBreadcrumbLink]"
      },
      "HlmBreadcrumbListDirective": {
        "file": "ui/breadcrumb/helm/src/lib/breadcrumb-list.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmBreadcrumbList]"
      },
      "HlmBreadcrumbPageDirective": {
        "file": "ui/breadcrumb/helm/src/lib/breadcrumb-page.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmBreadcrumbPage]"
      },
      "HlmBreadcrumbSeparatorComponent": {
        "file": "ui/breadcrumb/helm/src/lib/breadcrumb-separator.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmBreadcrumbSeparator]"
      },
      "HlmBreadcrumbDirective": {
        "file": "ui/breadcrumb/helm/src/lib/breadcrumb.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "ariaLabel",
            "type": "string",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmBreadcrumb]"
      }
    }
  },
  "button": {
    "helm": {
      "HlmButtonDirective": {
        "file": "ui/button/helm/src/lib/hlm-button.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "variant",
            "type": "ButtonVariants['variant']",
            "description": ""
          },
          {
            "name": "size",
            "type": "ButtonVariants['size']",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmBtn]",
        "exportAs": "hlmBtn"
      }
    }
  },
  "card": {
    "helm": {
      "HlmCardContentDirective": {
        "file": "ui/card/helm/src/lib/hlm-card-content.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmCardContent]"
      },
      "HlmCardDescriptionDirective": {
        "file": "ui/card/helm/src/lib/hlm-card-description.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmCardDescription]"
      },
      "HlmCardFooterDirective": {
        "file": "ui/card/helm/src/lib/hlm-card-footer.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "direction",
            "type": "CardFooterVariants['direction']",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmCardFooter]"
      },
      "HlmCardHeaderDirective": {
        "file": "ui/card/helm/src/lib/hlm-card-header.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "direction",
            "type": "CardHeaderVariants['direction']",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmCardHeader]"
      },
      "HlmCardTitleDirective": {
        "file": "ui/card/helm/src/lib/hlm-card-title.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmCardTitle]"
      },
      "HlmCardDirective": {
        "file": "ui/card/helm/src/lib/hlm-card.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmCard]"
      }
    }
  },
  "carousel": {
    "helm": {
      "HlmCarouselContentComponent": {
        "file": "ui/carousel/helm/src/lib/hlm-carousel-content.component.ts",
        "inputs": [
          {
            "name": "_userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-carousel-content"
      },
      "HlmCarouselItemComponent": {
        "file": "ui/carousel/helm/src/lib/hlm-carousel-item.component.ts",
        "inputs": [
          {
            "name": "_userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-carousel-item"
      },
      "HlmCarouselNextComponent": {
        "file": "ui/carousel/helm/src/lib/hlm-carousel-next.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "button[hlm-carousel-next], button[hlmCarouselNext]"
      },
      "HlmCarouselPreviousComponent": {
        "file": "ui/carousel/helm/src/lib/hlm-carousel-previous.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "button[hlm-carousel-previous], button[hlmCarouselPrevious]"
      },
      "HlmCarouselComponent": {
        "file": "ui/carousel/helm/src/lib/hlm-carousel.component.ts",
        "inputs": [
          {
            "name": "_userClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "orientation",
            "type": "'horizontal' | 'vertical'",
            "description": ""
          },
          {
            "name": "options",
            "type": "unknown",
            "description": ""
          },
          {
            "name": "plugins",
            "type": "unknown",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-carousel"
      }
    }
  },
  "date-picker": {
    "helm": {
      "HlmDatePickerComponent": {
        "file": "ui/date-picker/helm/src/lib/hlm-date-picker.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "min",
            "type": "T",
            "description": "The minimum date that can be selected."
          },
          {
            "name": "max",
            "type": "T",
            "description": ""
          },
          {
            "name": "disabled",
            "type": "boolean",
            "description": "Determine if the date picker is disabled."
          },
          {
            "name": "autoCloseOnSelect",
            "type": "boolean",
            "description": "If true, the date picker will close when a date is selected."
          },
          {
            "name": "formatDate",
            "type": "(date: T) => string",
            "description": "Defines how the date should be displayed in the UI."
          },
          {
            "name": "transformDate",
            "type": "(date: T) => T",
            "description": "Defines how the date should be transformed before saving to model/form."
          }
        ],
        "outputs": [
          {
            "name": "changed",
            "type": "T",
            "description": ""
          }
        ],
        "selector": "hlm-date-picker"
      }
    }
  },
  "form-field": {
    "helm": {
      "HlmErrorDirective": {
        "file": "ui/form-field/helm/src/lib/hlm-error.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "hlm-error"
      },
      "HlmFormFieldComponent": {
        "file": "ui/form-field/helm/src/lib/hlm-form-field.component.ts",
        "inputs": [],
        "outputs": [],
        "selector": "hlm-form-field"
      },
      "HlmHintDirective": {
        "file": "ui/form-field/helm/src/lib/hlm-hint.directive.ts",
        "inputs": [],
        "outputs": [],
        "selector": "hlm-hint"
      }
    }
  },
  "icon": {
    "helm": {
      "HlmIconDirective": {
        "file": "ui/icon/helm/src/lib/hlm-icon.directive.ts",
        "inputs": [
          {
            "name": "size",
            "type": "IconSize",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "ng-icon[hlm]"
      }
    }
  },
  "input": {
    "helm": {
      "HlmInputErrorDirective": {
        "file": "ui/input/helm/src/lib/hlm-input-error.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmInputError]"
      },
      "HlmInputDirective": {
        "file": "ui/input/helm/src/lib/hlm-input.directive.ts",
        "inputs": [
          {
            "name": "size",
            "type": "InputVariants['size']",
            "description": ""
          },
          {
            "name": "error",
            "type": "InputVariants['error']",
            "description": ""
          },
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmInput]"
      }
    }
  },
  "pagination": {
    "helm": {
      "HlmNumberedPaginationComponent": {
        "file": "ui/pagination/helm/src/lib/hlm-numbered-pagination.component.ts",
        "inputs": [
          {
            "name": "maxSize",
            "type": "number",
            "description": "The number of page links to show."
          },
          {
            "name": "showEdges",
            "type": "boolean",
            "description": "Show the first and last page buttons."
          },
          {
            "name": "pageSizes",
            "type": "number[]",
            "description": "The page sizes to show.\nDefaults to [10, 20, 50, 100]"
          }
        ],
        "outputs": [],
        "selector": "hlm-numbered-pagination"
      },
      "HlmPaginationContentDirective": {
        "file": "ui/pagination/helm/src/lib/hlm-pagination-content.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmPaginationContent]"
      },
      "HlmPaginationEllipsisComponent": {
        "file": "ui/pagination/helm/src/lib/hlm-pagination-ellipsis.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-pagination-ellipsis"
      },
      "HlmPaginationItemDirective": {
        "file": "ui/pagination/helm/src/lib/hlm-pagination-item.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmPaginationItem]"
      },
      "HlmPaginationLinkDirective": {
        "file": "ui/pagination/helm/src/lib/hlm-pagination-link.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "isActive",
            "type": "boolean",
            "description": ""
          },
          {
            "name": "size",
            "type": "ButtonVariants['size']",
            "description": ""
          },
          {
            "name": "link",
            "type": "RouterLink['routerLink']",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmPaginationLink]"
      },
      "HlmPaginationNextComponent": {
        "file": "ui/pagination/helm/src/lib/hlm-pagination-next.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "link",
            "type": "RouterLink['routerLink']",
            "description": ""
          },
          {
            "name": "queryParams",
            "type": "RouterLink['queryParams']",
            "description": ""
          },
          {
            "name": "queryParamsHandling",
            "type": "RouterLink['queryParamsHandling']",
            "description": ""
          },
          {
            "name": "ariaLabel",
            "type": "string",
            "description": ""
          },
          {
            "name": "text",
            "type": "string",
            "description": ""
          },
          {
            "name": "iconOnly",
            "type": "boolean",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-pagination-next"
      },
      "HlmPaginationPreviousComponent": {
        "file": "ui/pagination/helm/src/lib/hlm-pagination-previous.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "link",
            "type": "RouterLink['routerLink']",
            "description": ""
          },
          {
            "name": "queryParams",
            "type": "RouterLink['queryParams']",
            "description": ""
          },
          {
            "name": "queryParamsHandling",
            "type": "RouterLink['queryParamsHandling']",
            "description": ""
          },
          {
            "name": "ariaLabel",
            "type": "string",
            "description": ""
          },
          {
            "name": "text",
            "type": "string",
            "description": ""
          },
          {
            "name": "iconOnly",
            "type": "boolean",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-pagination-previous"
      },
      "HlmPaginationDirective": {
        "file": "ui/pagination/helm/src/lib/hlm-pagination.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "ariaLabel",
            "type": "string",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmPagination]"
      }
    }
  },
  "scroll-area": {
    "helm": {
      "HlmScrollAreaDirective": {
        "file": "ui/scroll-area/helm/src/lib/hlm-scroll-area.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "ng-scrollbar[hlm]"
      }
    }
  },
  "skeleton": {
    "helm": {
      "HlmSkeletonComponent": {
        "file": "ui/skeleton/helm/src/lib/hlm-skeleton.component.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-skeleton"
      }
    }
  },
  "sonner": {
    "helm": {
      "HlmToasterComponent": {
        "file": "ui/sonner/helm/src/lib/hlm-toaster.component.ts",
        "inputs": [
          {
            "name": "invert",
            "type": "ToasterProps['invert']",
            "description": ""
          },
          {
            "name": "theme",
            "type": "ToasterProps['theme']",
            "description": ""
          },
          {
            "name": "position",
            "type": "ToasterProps['position']",
            "description": ""
          },
          {
            "name": "hotKey",
            "type": "ToasterProps['hotkey']",
            "description": ""
          },
          {
            "name": "richColors",
            "type": "ToasterProps['richColors']",
            "description": ""
          },
          {
            "name": "expand",
            "type": "ToasterProps['expand']",
            "description": ""
          },
          {
            "name": "duration",
            "type": "ToasterProps['duration']",
            "description": ""
          },
          {
            "name": "visibleToasts",
            "type": "ToasterProps['visibleToasts']",
            "description": ""
          },
          {
            "name": "closeButton",
            "type": "ToasterProps['closeButton']",
            "description": ""
          },
          {
            "name": "toastOptions",
            "type": "ToasterProps['toastOptions']",
            "description": ""
          },
          {
            "name": "offset",
            "type": "ToasterProps['offset']",
            "description": ""
          },
          {
            "name": "dir",
            "type": "ToasterProps['dir']",
            "description": ""
          },
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          },
          {
            "name": "userStyle",
            "type": "Record<string, string>",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-toaster"
      }
    }
  },
  "spinner": {
    "helm": {
      "HlmSpinnerComponent": {
        "file": "ui/spinner/helm/src/lib/hlm-spinner.component.ts",
        "inputs": [
          {
            "name": "size",
            "type": "SpinnerVariants['size']",
            "description": ""
          },
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "hlm-spinner"
      }
    }
  },
  "typography": {
    "helm": {
      "HlmBlockquoteDirective": {
        "file": "ui/typography/helm/src/lib/hlm-blockquote.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmBlockquote]"
      },
      "HlmCodeDirective": {
        "file": "ui/typography/helm/src/lib/hlm-code.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmCode]"
      },
      "HlmH1Directive": {
        "file": "ui/typography/helm/src/lib/hlm-h1.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmH1]"
      },
      "HlmH2Directive": {
        "file": "ui/typography/helm/src/lib/hlm-h2.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmH2]"
      },
      "HlmH3Directive": {
        "file": "ui/typography/helm/src/lib/hlm-h3.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmH3]"
      },
      "HlmH4Directive": {
        "file": "ui/typography/helm/src/lib/hlm-h4.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmH4]"
      },
      "HlmLargeDirective": {
        "file": "ui/typography/helm/src/lib/hlm-large.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmLarge]"
      },
      "HlmLeadDirective": {
        "file": "ui/typography/helm/src/lib/hlm-lead.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmLead]"
      },
      "HlmMutedDirective": {
        "file": "ui/typography/helm/src/lib/hlm-muted.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmMuted]"
      },
      "HlmPDirective": {
        "file": "ui/typography/helm/src/lib/hlm-p.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmP]"
      },
      "HlmSmallDirective": {
        "file": "ui/typography/helm/src/lib/hlm-small.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmSmall]"
      },
      "HlmUlDirective": {
        "file": "ui/typography/helm/src/lib/hlm-ul.directive.ts",
        "inputs": [
          {
            "name": "userClass",
            "type": "ClassValue",
            "description": ""
          }
        ],
        "outputs": [],
        "selector": "[hlmUl]"
      }
    }
  }
}